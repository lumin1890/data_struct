#include <stdio.h>
#include <stdlib.h>


typedef int element;
typedef struct ListNode { // 노드 타입을 구조체로 정의한다.
	element data;
	struct ListNode* link;
} ListNode;

// 맨 앞에 노드 삽입 
ListNode* insert_first(ListNode* head, int value) {
	ListNode* p = (ListNode*)malloc(sizeof(ListNode));
	p->data = value;
	p->link = head;
	head = p;
	return head;
}

// 노드 pre 뒤에 새로운 노드 삽입
ListNode* insert(ListNode* head, ListNode* pre, element value) {
	ListNode* p = (ListNode*)malloc(sizeof(ListNode));
	p->data = value;
	p->link = pre->link;
	pre->link = p;
	return head;
}


// 리스트 출력
void print_list(ListNode* head) {
	for (ListNode* p = head; p != NULL; p = p->link)
		printf("%d->", p->data);
	printf("NULL \n");

}

//마지막 노드 찾기
ListNode* get_last_node(ListNode* head) {
	ListNode* current = head;
	while (current->link != NULL) {
		current = current->link;
	}
	return current;
}



int main() {

	ListNode* head1 = NULL;
	for (int i = 1; i <=3; i++) {
		head1 = insert_first(head1, i * 10);
	}
	print_list(head1);

	ListNode* head2 = NULL;
	for (int i = 4; i <= 5; i++) {
		head2 = insert_first(head2, i * 10);
	}
	print_list(head2);

	get_last_node(head1)->link = head2;
	print_list(head1);

	return 0;

	
}
