#include <stdio.h>
#include <stdlib.h>


typedef int element;
typedef struct ListNode { // 노드 타입을 구조체로 정의한다.
	element data;
	struct ListNode* link;
} ListNode;

// 맨 앞에 노드 삽입 
ListNode* insert_first(ListNode* head, int value) {
	ListNode* p = (ListNode*)malloc(sizeof(ListNode));
	p->data = value;
	p->link = head;
	head = p;
	return head;
}

// 노드 pre 뒤에 새로운 노드 삽입
ListNode* insert(ListNode* head, ListNode* pre, element value) {
	ListNode* p = (ListNode*)malloc(sizeof(ListNode));
	p->data = value;
	p->link = pre->link;
	pre->link = p;
	return head;
}



void print_list(ListNode* head) {
	for (ListNode* p = head; p != NULL; p = p->link)
		printf("%d->", p->data);
	printf("NULL \n");

}

void find_value(ListNode* head, int value) {
	ListNode* p = head;
	while (p != NULL) {
		if (p->data == value) {
			printf("리스트에서 %d을 찾았습니다.", value);
			return;
		}
		p = p->link;
	}
}

int main() {

	ListNode* head = NULL;
	for (int i = 1; i < 5; i++) {
		head = insert_first(head, i * 10);
		print_list(head);
		if (i * 10 == 30) {
			find_value(head, 30);
			break;

		}
	
	}		

	return 0;
}
